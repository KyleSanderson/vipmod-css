#pragma semicolon 1public FireRoundEnd(Status, Attacker){	switch (Status)	{		case 0: // Disconnection / Team Change.		{			LogPlyrPlyrEvent(0, g_VIPIndex, "triggered", "VIP_Killed"); // HLX:CE Support			SDKCall(g_hTerminateRound, 4.0, 2);		// The VIP has been assassinated!			SetCash(2);		}				case 1:		{			SDKCall(g_hTerminateRound, 4.0, 1);		// The VIP has escaped!			LogPlayerEvent(g_VIPIndex, "triggered", "VIP_Escaped"); // HLX:CE Logging Support			SetCash(3);		}				case 2:		{			SDKCall(g_hTerminateRound, 4.0, 14);	// The VIP has not escaped!			LogPlayerEvent(0, "triggered", "VIP_NotEscaped"); // HLX:CE Logging Support - There's no support for this from Source? o.O			SetCash(2);		}				case 3:		{			SDKCall(g_hTerminateRound, 4.0, 2);		// The VIP has been assassinated!			SetCash(2);			LogPlyrPlyrEvent(attacker, g_VIPIndex, "triggered", "VIP_Killed"); // HLX:CE Logging Support		}					}}/*public FindNewVIP(Status){	switch (Status)	{		case 0: 		{			g_VIPIndex = -1;			for (new i = 0; i <= MaxClients; i++)			{				g_VIPChanceArray[i] = 0;			}		}				case 1:		{			new PlayerCount = 0;			if(GetRealClientCount(2) <= 1)			{				for (new i = 1; i<=MaxClients; i++)				{					if (IsClientConnected(i) && IsClientInGame(i) && IsPlayerAlive(i) && !IsFakeClient(i) && GetClientTeam(i) == 3)					{						g_VIPChanceArray[PlayerCount] = i;						PlayerCount++;					}				}								if (PlayerCount == 0)				{					g_VIPIndex = -1;					g_VIPLastChosen = -1;					return;				}								g_VIPIndex = g_VIPChanceArray[GetRandomInt(0, PlayerCount-1)];				SetVIPPlayer(g_VIPIndex);				g_VIPLastChosen = GetClientUserId(g_VIPIndex);				return;			}			for (new i = 1; i<=MaxClients; i++)			{				if (IsClientConnected(i) && IsClientInGame(i) && IsPlayerAlive(i) && !IsFakeClient(i) && GetClientUserId(i) != g_VIPLastChosen && GetClientTeam(i) == 3)				{					g_VIPChanceArray[PlayerCount] = i;					PlayerCount++;				}			}						if (PlayerCount == 0)			{				g_VIPIndex = -1;				g_VIPLastChosen = -1;				return;			}						g_VIPIndex = g_VIPChanceArray[GetRandomInt(0, PlayerCount-1)];			g_VIPLastChosen = GetClientUserId(g_VIPIndex);			SetVIPPlayer(g_VIPIndex);		}	}} */